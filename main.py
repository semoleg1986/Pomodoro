#!/usr/bin/env python3
import click
import datetime
import time
import os
import sys


def pluralize_seconds(n):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç '—Å–µ–∫—É–Ω–¥–∞', '—Å–µ–∫—É–Ω–¥—ã' –∏–ª–∏ '—Å–µ–∫—É–Ω–¥' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞."""
    if 11 <= n % 100 <= 14:
        return "—Å–µ–∫—É–Ω–¥"
    last_digit = n % 10
    if last_digit == 1:
        return "—Å–µ–∫—É–Ω–¥–∞"
    elif 2 <= last_digit <= 4:
        return "—Å–µ–∫—É–Ω–¥—ã"
    else:
        return "—Å–µ–∫—É–Ω–¥"


def counter(min, notice="–†–∞–±–æ—Ç–∞–µ–º"):
    today = datetime.datetime.now()
    # print(f"–°—Ç–∞—Ä—Ç –ø–æ–¥–æ–º–æ–¥–æ—Ä–æ {num}:", today.strftime('%d-%m-%Y %HH-%MM-%SS'))
    finish_time = today + datetime.timedelta(minutes=min)
    while datetime.datetime.now() < finish_time:
        remaining = finish_time - datetime.datetime.now()
        remaining_str = str(remaining).split(".")[0]
        # print(f"{notice} {remaining_str}", end="\r", flush=True)
        click.echo(f"\r{notice}: {click.style(remaining_str, fg='green')}", nl=False)

        time.sleep(1)
    click.echo("\a")
    # print(f"\a\n–ö–æ–Ω–µ—Ü: {datetime.datetime.now().strftime('%d-%m-%Y %HH-%MM-%SS')}")
    # os.system(f'say –í—Ä–µ–º—è –∑–∞–∫–æ–Ω—á–µ–Ω–æ')


def sets_of_pomodoros(pomodoros, size):
    return [pomodoros[i : i + size] for i in range(0, len(pomodoros), size)]


def set_pomodoro(sets, work_min, break_min, relax_min):
    for index, set in enumerate(sets, 1):
        click.clear()
        for i, j in enumerate(set, 1):
            click.echo(f"–°–µ—Å—Å–∏—è {index}")
            os.system(f"say –°–µ—Å—Å–∏—è {index}. –ü–æ–º–æ–¥–æ—Ä–æ {i}")
            click.echo(f'–ü–æ–º–æ–¥–æ—Ä–æ {i}: {"üçÖ" * j}')
            counter(work_min)
            sys.stdout.write("\033[F\033[K")
            sys.stdout.flush()
            counter(break_min, notice="–û—Ç–¥—ã—Ö–∞–µ–º")
            click.clear()
        counter(relax_min, notice="–ë–æ–ª—å—à–æ–π –æ—Ç–¥—ã—Ö")


@click.command()
@click.option(
    "--work-min", type=int, default=25, help="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–º–∏–¥–æ—Ä–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö)."
)
@click.option(
    "--break-min",
    type=int,
    default=5,
    help="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö).",
)
@click.option(
    "--relax-min",
    type=int,
    default=15,
    help="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö).",
)
@click.option("--pomodoros", type=int, default=8, help="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–º–∏–¥–æ—Ä–æ–≤.")
@click.option(
    "--size",
    type=int,
    default=4,
    help="–†–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ —Å–µ—Ç–∞ (–∫–æ–ª-–≤–æ –ø–æ–º–∏–¥–æ—Ä–æ–≤ –¥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞).",
)
@click.confirmation_option(prompt="–ó–∞–ø—É—Å–∫–∞–µ–º?")
def cli(work_min, break_min, relax_min, pomodoros, size):
    """–ü–æ–º–æ–¥–æ—Ä–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ. –õ–µ–≥–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –ª—é–±—ã—Ö –≤–∞—à–∏—Ö –∑–∞–¥–∞—á"""
    # click.clear()
    all_pomodoros = list(range(1, pomodoros + 1))
    sets = sets_of_pomodoros(all_pomodoros, size)
    set_pomodoro(sets, work_min, break_min, relax_min)
    os.system(f"say –ö–æ–Ω–µ—Ü")


if __name__ == "__main__":
    cli()
